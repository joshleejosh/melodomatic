# MELODOMATIC is controlled by a script file.

# The script must contain at least one SCALE and one VOICE.
# When this is not true, the program ends.

# A leading ':' denotes a directive.
# Lines after a directive are part of that data structure.
# A '@' denotes a macro string.
# A '@' in the context of a data structure will be replaced by its macro.
# A '#' denotes a comment.
# Blank lines are ignored.

### PREPROCESSING ################################################

# You can include another file. It gets pasted in verbatim *before* the script is processed.
# Hotloading will only occur when the main file is updated.
:include melodomatic_include.txt

# Macros are direct text substitutions.
@scale_major 0 2 4 5 7 9 11
@scale_seventh 	0 	 2   4 5 7 9 10 12 	  # stray whitespace will be cleansed, as will this comment.

### SCALES ################################################
# A scale defines the pitches that can be played by a voice.
# A set of linked scales forms a directed graph of harmonic changes.

:scale FMaj      # Scale ID is a string
65               # ROOT pitch is an integer midi note value (0-129)
0 2 4 5 7 9 11   # Scale INTERVALS are added to the root to generate the full 
                 # set of pitches that can be played.
                 # Under normal circumstances, these should be in the range [0,11]
FMaj BbMaj C7    # LINKS are ids of other scales that the player can transition to.
                 # The player switches between scales periodically. If there are
                 # no links, the player will just stay here forever.
                 # Self-transitions are okay. Invalid links are ignored.

:scale BbMaj
70
@scale_major
FMaj C7

:scale C7
72
@scale_seventh
FMaj BbMaj


### PITCH SET #############################################
# A pitch set defines the intervals in a scale that will be played by a voice.

:pitchset Triad    # Pitch Set ID is a string
1 3 5              # Pitch Set INTERVALS are harmonic intervals, not midi note offsets.
                   # So 1 is the Tonic, 5 is the Dominant, etc.

:pitchset Deep9th
--1 --5 -1 -5 -6+ 1 3 5 7- 9    # -5 is the dominant, lowered one octave.
                                # --5 is lowered two octaves.
                                # 7- is a flatted subtonic.
                                # -6+ is a sharped submediant one octave down.
                                # 9 could (should?) also be written as +2, but
                                # it works because the all the scales in this
                                # script have 7 # notes (see above), and the
                                # value is moduloed.

:pitchset Pentatonic
1 2 3 5 6 8


### VOICES ################################################
# A voice generates a sequence of notes (using the player's current scale).
# The player plays all voices simultaneously.

:voice Tenor  # Voice ID is a string.
Pentatonic    # Pitch Set ID defines which pitches the voice will play
              # in whatever the current scale is.
-12           # OFFSET is added to whatever pitch we get from the scale.
              # Usually this will be a multiple of 12 for shifting up/down
              # octaves.
1 2 2 4 -1 -2 # DURATIONS are a pool of values (measured in beats) that are
              # randomly picked from to determine how long a note will play
              # for. More entries means the value will be picked more often.
              # Negative durations are rests.
48 64 80      # VELOCITIES are MIDI values (0-127). The voice will
              # periodically shift up and down the series of values.

:voice Alto
Pentatonic
0
4 1 1 1 1 2 2 -1 -2
48 64 80 96

:voice Soprano
Triad
12
.5 .5 1 1 1 2 -.5 -1
32 48


# A LOOP is a voice that plays a specific sequence instead of generating random notes.
:loop Bass
-24              # OFFSET is used the same way as in regular voices.
 0    4     40   # Each line is a STEP in the sequence, consisting of PITCH, DURATION, and VELOCITY.
                 # Pitch is relative to the current scale's root.
                 # Duration is in beats.
                 # Velocity is a MIDI value.
 7               # If duration or velocity are unspecified, they repeat the previous step's value.
 0    4     56
 .    2          # A '.' for a pitch represents a rest.
 7    2

# A HARMONY is a voice that plays in unison with another voice, but with its pitch shifted.
:harmony BassH   # ID of the harmony voice.
Bass             # ID of the root voice this will play along with.
                 # This can be a voice or loop, but not another harmony.
-12              # Pitch offset from the root voice.
-8               # Velocity offset from the root voice.


### OTHER DIRECTIVES (all optional) ########################

# Tempo
:beats_per_minute 108

# Define the smallest fraction of a beat that we can play.
# This is used to derive the rate of processing, so very large numbers lead to
# very small time slices, which could lead to choppy performance.
# On the other hand, too few pulses risks dropping/overlapping short notes.
# So you should probably just not play with this. (Default is 8)
:pulses_per_beat 4

# Define how often (in beats) the reader should check for changes in this script file.
:reload_interval 4

# A list of possible periods (in beats) between scale changes.
:scale_change_times @sixteen 32

# Which scale the player should start on when the file is first loaded.
# By default, the player will start with the first scale in the file.
# When the file is hotloaded, this will override any current scale change.
:scale_first FMaj

# Whenever a voice plays a note, this is the chance that it will also change velocity.
# Velocity changes are always one step up or down the voice's velocity list.
:velocity_change_chance .20


